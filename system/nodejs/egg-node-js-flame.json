{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2023-07-08T11:04:24-04:00",
    "name": "node.js flame",
    "author": "admin@nekogaming.xyz",
    "description": "a generic node.js egg\r\n\r\nThis will clone a git repo. it defaults to master if no branch is specified.\r\n\r\nInstalls the node_modules on install. If you set user_upload then I assume you know what you are doing.",
    "features": null,
    "docker_images": {
        "nodejs_16-pnpm": "ghcr.io\/thakyz\/yolks:nodejs_16"
    },
    "file_denylist": [],
    "startup": "if [[ -d .git ]] && [[ {{AUTO_UPDATE}} == \"1\" ]]; then git pull; fi; \/home\/container\/update_password.sh; npm run start;",
    "config": {
        "files": "{\r\n    \"data\/config.json\": {\r\n        \"parser\": \"json\",\r\n        \"find\": {\r\n            \"dockerHost\": \"{{config.docker.interface}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"Server is running on port {{server.build.default.port}}\"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# NodeJS App Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\napt update\r\napt install -y git curl jq file unzip make gcc g++ python python-dev libtool\r\n\r\necho -e \"updating npm. please wait...\"\r\nnpm install npm@latest -g\r\n\r\nmkdir -p \/mnt\/server\r\ncd \/mnt\/server\r\n\r\nif [ \"${USER_UPLOAD}\" == \"true\" ] || [ \"${USER_UPLOAD}\" == \"1\" ]; then\r\n    echo -e \"assuming user knows what they are doing have a good day.\"\r\n    exit 0\r\nfi\r\n\r\n## add git ending if it's not on the address\r\nif [[ ${GIT_ADDRESS} != *.git ]]; then\r\n    GIT_ADDRESS=${GIT_ADDRESS}.git\r\nfi\r\n\r\nif [ -z \"${USERNAME}\" ] && [ -z \"${ACCESS_TOKEN}\" ]; then\r\n    echo -e \"using anon api call\"\r\nelse\r\n    GIT_ADDRESS=\"https:\/\/${USERNAME}:${ACCESS_TOKEN}@$(echo -e ${GIT_ADDRESS} | cut -d\/ -f3-)\"\r\nfi\r\n\r\n## pull git js repo\r\nif [ \"$(ls -A \/mnt\/server)\" ]; then\r\n    echo -e \"\/mnt\/server directory is not empty.\"\r\n    if [ -d .git ]; then\r\n        echo -e \".git directory exists\"\r\n        if [ -f .git\/config ]; then\r\n            echo -e \"loading info from git config\"\r\n            ORIGIN=$(git config --get remote.origin.url)\r\n        else\r\n            echo -e \"files found with no git config\"\r\n            echo -e \"closing out without touching things to not break anything\"\r\n            exit 10\r\n        fi\r\n    fi\r\n\r\n    if [ \"${ORIGIN}\" == \"${GIT_ADDRESS}\" ]; then\r\n        echo \"pulling latest from github\"\r\n        git pull\r\n    fi\r\nelse\r\n    echo -e \"\/mnt\/server is empty.\\ncloning files into repo\"\r\n    if [ -z ${BRANCH} ]; then\r\n        echo -e \"cloning default branch\"\r\n        git clone ${GIT_ADDRESS} . --recurse-submodules\r\n    else\r\n        echo -e \"cloning ${BRANCH}'\"\r\n        git clone --single-branch --branch ${BRANCH} ${GIT_ADDRESS} . --recurse-submodules\r\n    fi\r\n\r\nfi\r\n\r\nif [ -f \/mnt\/server\/package.json ]; then\r\n    \/usr\/local\/bin\/npm install --omit=dev\r\nfi\r\n\r\ncd \/mnt\/server\/node-sqlite3 \\\r\n    && npm install --omit=dev \\\r\n    && npm audit fix --force \\\r\n    && cd \/mnt\/server\r\n\r\nmkdir -p \/mnt\/server\/public \/mnt\/server\/data \\\r\n    && npm install \/mnt\/server\/node-sqlite3 \\\r\n    && cd \/mnt\/server\/client \\\r\n    && npm install --omit=dev \\\r\n    && npm run build \\\r\n    && cd \/mnt\/server \\\r\n    && mv \/mnt\/server\/client\/build\/* .\/public \\\r\n    && rm -rf \/mnt\/server\/client\r\n\r\nif [ ! -d \/mnt\/server\/secrets]; then\r\n  mkdir \/mnt\/server\/secrets\r\nfi\r\n\r\nif [ ! -f \/mnt\/server\/secrets\/flame_password ]; then\r\n  touch \/mnt\/server\/secrets\/flame_password\r\n  echo \"${PASSWORD}\" > \/mnt\/server\/secrets\/flame_password\r\nfi\r\n\r\nexport NODE_ENV=production\r\n\r\nupdate_password=\"IyEvYmluL2Jhc2gNCg0KaWYgWyAtZiAiL2hvbWUvY29udGFpbmVyL3NlY3JldHMvZmxhbWVfcGFzc3dvcmQiIF07IHRoZW4NCiAgY3VycmVudFBhc3N3b3JkPSQoaGVhZCAtbiAxICIvaG9tZS9jb250YWluZXIvc2VjcmV0cy9mbGFtZV9wYXNzd29yZCIpDQogIGlmIFsgISAteiAiJHtQQVNTV09SRH0iIF0gJiYgWyAiJHtjdXJyZW50UGFzc3dvcmR9IiAhPSAiJHtQQVNTV09SRH0iIF07IHRoZW4NCiAgICBzZXQgLW8gbm9jbG9iYmVyDQogICAgZWNobyAiJHtQQVNTV09SRH0iID4gIi9ob21lL2NvbnRhaW5lci9zZWNyZXRzL2ZsYW1lX3Bhc3N3b3JkIg0KICBmaQ0KZmkNCg0KZXhpdCAkPw==\"\r\nupdate_password=$(base64 -d \"${update_password}\")\r\necho \"${update_password}\" > \/mnt\/server\/update_password.sh\r\nchmod +x \/mnt\/server\/update_password.sh\r\n\r\necho -e \"install complete\"\r\nexit 0",
            "container": "node:16",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Git Repo Address",
            "description": "GitHub Repo to clone\r\n\r\nI.E. https:\/\/github.com\/parkervcp\/repo_name",
            "env_variable": "GIT_ADDRESS",
            "default_value": "https:\/\/github.com\/thakyZ\/flame.git",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Install Branch",
            "description": "The branch to install.",
            "env_variable": "BRANCH",
            "default_value": "master",
            "user_viewable": true,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "User Uploaded Files",
            "description": "Skip all the install stuff if you are letting a user upload files.\r\n\r\n0 = false (default)\r\n1 = true",
            "env_variable": "USER_UPLOAD",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|boolean",
            "field_type": "text"
        },
        {
            "name": "Auto Update",
            "description": "Pull the latest files on startup when using a GitHub repo.",
            "env_variable": "AUTO_UPDATE",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|boolean",
            "field_type": "text"
        },
        {
            "name": "JS file",
            "description": "The file that starts the app",
            "env_variable": "JS_FILE",
            "default_value": "server.js",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Git Username",
            "description": "Username to auth with git.",
            "env_variable": "USERNAME",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Git Access Token",
            "description": "Password to use with git.\r\n\r\nIt's best practice to use a Personal Access Token.\r\nhttps:\/\/github.com\/settings\/tokens\r\nhttps:\/\/gitlab.com\/-\/profile\/personal_access_tokens",
            "env_variable": "ACCESS_TOKEN",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Additional Node packages",
            "description": "Install additional node packages.\r\n\r\nUse spaces to separate.",
            "env_variable": "NODE_PACKAGES",
            "default_value": "pnpm",
            "user_viewable": true,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Uninstall Node packages",
            "description": "Uninstall node packages.\r\n\r\nUse spaces to separate.",
            "env_variable": "UNNODE_PACKAGES",
            "default_value": "",
            "user_viewable": true,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Password",
            "description": "The default Flame password.",
            "env_variable": "PASSWORD",
            "default_value": "flame",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|min:5|max:256",
            "field_type": "text"
        },
        {
            "name": "Node Environment",
            "description": "",
            "env_variable": "NODE_ENV",
            "default_value": "production",
            "user_viewable": true,
            "user_editable": false,
            "rules": "string|required_with:production,development",
            "field_type": "text"
        }
    ]
}