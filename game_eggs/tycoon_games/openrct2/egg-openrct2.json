{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v1",
        "update_url": null
    },
    "exported_at": "2022-01-12T02:53:49+00:00",
    "name": "OpenRCT2 (In Dev)",
    "author": "rehlmgaming@gmail.com",
    "description": "OpenRCT2 is an open-source re-implementation of RollerCoaster Tycoon 2 (RCT2), expanding the game with new features, fixing bugs and raising game limits.",
    "features": null,
    "images": [
        "ghcr.io\/parkervcp\/yolks:debian"
    ],
    "file_denylist": [],
    "startup": ".\/OpenRCT2\/openrct2-cli --version && .\/OpenRCT2\/openrct2-cli host $(if [ {{LOAD_AUTOSAVE}} ] && [ -d ServerData\/save\/autosave\/ ]; then find ServerData\/save\/autosave\/ | sort -r | head -1; else printf {{SAVE_URI}}; fi) --port {{SERVER_PORT}} --user-data-path \/home\/container\/ServerData\/",
    "config": {
        "files": "{\r\n    \"Data\/config.ini\": {\r\n        \"parser\": \"ini\",\r\n        \"find\": {\r\n            \"general.autosave\": \"{{server.build.env.AUTOSAVE_INTERVAL}}\",\r\n            \"general.autosave_amount\": \"{{server.build.env.AUTOSAVE_AMOUNT}}\",\r\n            \"network.player_name\": \"\\\"{{server.build.env.SERVER_PLAYER_NAME}}\\\"\",\r\n            \"network.default_port\": \"{{server.build.default.port}}\",\r\n            \"network.default_password\": \"\\\"{{server.build.env.SERVER_PASSWORD}}\\\"\",\r\n            \"network.advertise\": \"{{server.build.env.SERVER_ADVERTISE}}\",\r\n            \"network.maxplayers\": \"{{server.build.env.MAX_PLAYERS}}\",\r\n            \"network.server_name\": \"\\\"{{server.build.env.SERVER_NAME}}\\\"\",\r\n            \"network.server_description\": \"\\\"{{server.build.env.SERVER_DESCRIPTION}}\\\"\",\r\n            \"network.server_greeting\": \"\\\"{{server.build.env.SERVER_GREETING}}\\\"\",\r\n            \"network.provider_name\": \"\\\"{{server.build.env.PROVIDER_NAME}}\\\"\",\r\n            \"network.provider_email\": \"\\\"{{server.build.env.PROVIDER_EMAIL}}\\\"\",\r\n            \"network.provider_website\": \"\\\"{{server.build.env.PROVIDER_WEBSITE}}\\\"\",\r\n            \"network.log_chat\": \"{{server.build.env.LOG_CHAT}}\",\r\n            \"network.log_server_actions\": \"{{server.build.env.LOG_SERVER_ACTIONS}}\",\r\n            \"network.pause_server_if_no_clients\": \"{{server.build.env.PAUSE_NO_CLIENTS}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"Listening for clients on\"\r\n}",
        "logs": "{}",
        "stop": "^C^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n\r\n## File: Pterodactyl OpenRCT2 Egg - egg-openrct2.json\r\n## Authors: David Wolfe (Red-Thirten), parkervcp\r\n## Date: 2022\/01\/11\r\n## License: MIT License\r\n\r\nGITHUB_PACKAGE=\"OpenRCT2\/OpenRCT2\"\r\nMATCH=\"linux-bullseye-x86_64\"\r\n#DEFAULT_SAVE=\"https:\/\/github.com\/parkervcp\/eggs\/tree\/master\/game_eggs\/tycoon_games\/openrct2\/save.sv6\"\r\nDEFAULT_SAVE=\"https:\/\/github.com\/parkervcp\/eggs\/tree\/master\/game_eggs\/tycoon_games\/openrct2\/save.sv6\"\r\n\r\n## OpenRCT Install\r\napt -y update\r\n[ ! -d \/mnt\/server ] && mkdir \/mnt\/server\r\n# Remove existing installation if present\r\n[ -d \/mnt\/server\/OpenRCT2 ] && rm -rf \/mnt\/server\/OpenRCT2\r\n\r\n# Determine if installing from source or from release\r\nif [ \"${VERSION}\" == \"develop\" ]; then\r\n    echo -e \"\\nInstalling\/Updating OpenRCT2 from source...\\n\"\r\n\t# Get required packages\r\n    apt -y install curl git make cmake gcc build-essential libicu-dev pkg-config libcurl4-openssl-dev libcrypto++-dev libpng-dev libssl-dev libzip-dev duktape-dev nlohmann-json3-dev\r\n    cd \/tmp\r\n\t# Clone the branch and check if successful\r\n\tgit clone --branch ${VERSION} https:\/\/github.com\/${GITHUB_PACKAGE} && cd OpenRCT2 || { echo -e '\\nFailed to clone \"${VERSION}\" branch from https:\/\/github.com\/${GITHUB_PACKAGE}\\n' && exit 1 }\r\n\tmkdir build && cd build\r\n\t# Prepare CMake files for a lightweight and CLI-only build of OpenRCT2, using the appropriate flags\r\n\tcmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DPORTABLE=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_CXX_FLAGS=\"-g -gz\" -DDISABLE_TTF=ON -DDISABLE_GOOGLE_BENCHMARK=ON -DDISABLE_DISCORD_RPC=ON -DDISABLE_GUI=ON\r\n\techo -e \"\\nBuilding OpenRCT2 package from source...\\n\\tThis process can take quite some time. Grab a coffee :)\"\r\n\t# Build OpenRCT2\r\n\tDESTDIR=. make install\r\n\t# Check if build was successful\r\n\tcd usr\/local || { echo -e \"\\nFailed to successfully build OpenRCT2!\\n\" && exit 1 }\r\n\t# Make executable-ready package by moving compiled files to the correct locations\r\n\tmkdir -p \/mnt\/server\/OpenRCT2\/data\r\n\tmv bin\/* \/mnt\/server\/OpenRCT2\/\r\n\tmv share\/openrct2\/* share\/openrct2-cli\/* \/mnt\/server\/OpenRCT2\/data\/\r\n\tmv share\/doc \/mnt\/server\/OpenRCT2\/\r\n\tcd \/mnt\/server\r\n\techo -e \"\\nBuild of OpenRCT2 package complete!\"\r\nelse\r\n    echo -e '\\nInstalling\/Updating OpenRCT2 from release tag \"${VERSION}\"...\\n'\r\n\t# Get required packages\r\n    apt install -y curl jq\r\n    cd \/mnt\/server\r\n\t# This is a simple script to use the GitHub API for release versions.\r\n\t# This requires the egg has a variable for GITHUB_PACKAGE, VERSION and MATCH (MATCH is to match the filename in some way).\r\n\t# This supports using oauth\/personal access tokens via GITHUB_USER and GITHUB_OAUTH_TOKEN (both are required).\r\n\t# If you are getting hit with GitHub API limit issues then you need to have the user and token set.\r\n\tif [ -z \"${GITHUB_USER}\" ] && [ -z \"${GITHUB_OAUTH_TOKEN}\" ] ; then\r\n\t\techo -e \"\\nUsing anonymous GitHub API call.\"\r\n\telse\r\n\t\techo -e \"\\nGitHub user and OAuth token set.\"\r\n\t\talias curl='curl -u ${GITHUB_USER}:${GITHUB_OAUTH_TOKEN} '\r\n\tfi\r\n\r\n\t# Get release info and download links\r\n\tLATEST_JSON=$(curl --silent \"https:\/\/api.github.com\/repos\/${GITHUB_PACKAGE}\/releases\/latest\")\r\n\tRELEASES=$(curl --silent \"https:\/\/api.github.com\/repos\/${GITHUB_PACKAGE}\/releases\")\r\n\r\n\tif [ -z \"${VERSION}\" ] || [ \"${VERSION}\" == \"latest\" ]; then\r\n\t\tDOWNLOAD_URL=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url | grep -i ${MATCH})\r\n\telse\r\n\t\tVERSION_CHECK=$(echo ${RELEASES} | jq -r --arg VERSION \"${VERSION}\" '.[] | select(.tag_name==$VERSION) | .tag_name')\r\n\t\tif [ \"${VERSION}\" == \"${VERSION_CHECK}\" ]; then\r\n\t\t\tDOWNLOAD_URL=$(echo ${RELEASES} | jq -r --arg VERSION \"${VERSION}\" '.[] | select(.tag_name==$VERSION) | .assets[].browser_download_url' | grep -i ${MATCH})\r\n\t\telse\r\n\t\t\techo -e \"\\tDefaulting to latest release...\"\r\n\t\t\tDOWNLOAD_URL=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url)\r\n\t\tfi\r\n\tfi\r\n\t# Download and unpackage the release\r\n\tif [ curl -L ${DOWNLOAD_URL} | tar -xzv ]; then\r\n\t\techo -e \"\\nDownload of OpenRCT release successful!\"\r\n\telse\r\n\t\techo -e '\\nFailed to download release tag \"${VERSION}\" from https:\/\/github.com\/${GITHUB_PACKAGE}\\n' && exit 1\r\n\tfi\r\nfi\r\n\r\n## OpenRCT2 Setup\r\n# Setup ServerData\/save directory\r\n[ ! -d ServerData\/save ] && mkdir -p ServerData\/save\r\ncd ServerData\/save\r\n# Download default save.sv6 if missing\r\nif [ ! -f save.sv6 ]; then\r\n\techo -e \"Downloading default save.sv6 file from ${DEFAULT_SAVE}\"\r\n\tcurl -sSL ${DEFAULT_SAVE}\r\nfi\r\n\r\necho -e \"\\nOpenRCT2 Successfully Installed!\"",
            "container": "debian:bullseye-slim",
            "entrypoint": "\/bin\/bash"
        }
    },
    "variables": [
        {
            "name": "Save File",
            "description": "Save file (.sv4 \/ .sv6 \/ .park) to load. Can be a file path or can be a webhosted file URL. An existing save file must be specified; the server cannot generate a new scenario\/save from scratch.",
            "env_variable": "SAVE_URI",
            "default_value": "ServerData\/save\/save.sv6",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|min:5"
        },
        {
            "name": "OpenRCT2 Version",
            "description": "The release tag (version) of OpenRCT2 to download and install from their official Github (ie. \"v0.3.5.1\"). Use \"latest\" to download the latest release, or \"develop\" to build from the latest source (takes longer to install but is the most up to date).",
            "env_variable": "VERSION",
            "default_value": "develop",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|min:1"
        },
        {
            "name": "Server Player Name",
            "description": "The server appears as a player in the player list. This is the name it will have.",
            "env_variable": "SERVER_PLAYER_NAME",
            "default_value": "Server",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|nullable"
        },
        {
            "name": "Server Password",
            "description": "Password requested by the server for clients to connect. Admins do not have to enter password to join. Leave empty for no password.",
            "env_variable": "SERVER_PASSWORD",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|nullable"
        },
        {
            "name": "Advertise Server",
            "description": "If set to \"false\", the server will not be advertised in the master server list, and clients must manually connect.",
            "env_variable": "SERVER_ADVERTISE",
            "default_value": "true",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|in:true,false"
        },
        {
            "name": "Max Players",
            "description": "Maximum players allowed to connect to the server.",
            "env_variable": "MAX_PLAYERS",
            "default_value": "16",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer|min:0"
        },
        {
            "name": "Server Name",
            "description": "Name of the server that appears in the server list.",
            "env_variable": "SERVER_NAME",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|nullable"
        },
        {
            "name": "Server Description",
            "description": "Description of the server that appears when hovering over the server in the server list.",
            "env_variable": "SERVER_DESCRIPTION",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|nullable"
        },
        {
            "name": "Server Greeting",
            "description": "The \"Message of the Day\" that gets sent to all clients who join.",
            "env_variable": "SERVER_GREETING",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|nullable"
        },
        {
            "name": "Provider Name",
            "description": "Server provider name that appears in server information window.",
            "env_variable": "PROVIDER_NAME",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|nullable"
        },
        {
            "name": "Server Provider E-Mail",
            "description": "Server provider e-mail that appears in server information window.",
            "env_variable": "PROVIDER_EMAIL",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|nullable"
        },
        {
            "name": "Server Provider Website",
            "description": "Server provider website that appears in server information window.",
            "env_variable": "PROVIDER_WEBSITE",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|nullable"
        },
        {
            "name": "Log Chat",
            "description": "Set to \"true\" if you would like in-game chat logged to file in Data\/chatlogs.",
            "env_variable": "LOG_CHAT",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|in:true,false"
        },
        {
            "name": "Log Server Actions",
            "description": "Set to \"true\" if you would like in-game actions logged to file in Data\/serverlogs.",
            "env_variable": "LOG_SERVER_ACTIONS",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|in:true,false"
        },
        {
            "name": "Pause Server If No Clients",
            "description": "Set to \"true\" to have the server pause simulation if no clients are on the server.",
            "env_variable": "PAUSE_NO_CLIENTS",
            "default_value": "false",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|in:true,false"
        },
        {
            "name": "Autosave Interval",
            "description": "0 = Every 1 min, 1 = Every 5 min, 2 = Every 15 min, 3 = Every 30 min, 4 = Every hour, 5 = Never",
            "env_variable": "AUTOSAVE_INTERVAL",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer|between:0,5"
        },
        {
            "name": "Autosaves To Keep",
            "description": "Number of autosaves to keep before rolling over and deleting the oldest one. Set to 0 to disable autosaving.",
            "env_variable": "AUTOSAVE_AMOUNT",
            "default_value": "10",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer|min:0"
        },
        {
            "name": "Load Latest Autosave",
            "description": "Will load the latest autosave (assuming one is present) *instead* of the Save File when the server is started. Useful for loading the latest progress of a park after a reboot. Set to \"0\" to \"lock\" progress of the park, and always load the original Save File on start up.",
            "env_variable": "LOAD_AUTOSAVE",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean"
        }
    ]
}