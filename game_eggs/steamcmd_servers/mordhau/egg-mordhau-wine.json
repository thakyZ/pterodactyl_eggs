{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v1",
        "update_url": null
    },
    "exported_at": "2021-08-28T18:01:27+00:00",
    "name": "Mordhau Wine",
    "author": "parker@parkervcp.com",
    "description": "Mordhau is a multiplayer medieval hack 'n slash video game, developed by Slovenian independent studio Triternion, with a prominent aspect of skill-based competitive play and customization.",
    "features": [
        "steam_disk_space"
    ],
    "images": [
        "quay.io\/parkervcp\/pterodactyl-images:debian_wine"
    ],
    "file_denylist": [],
    "startup": "xvfb-run --auto-servernum wine MordhauServer.exe {{DEFAULT_MAP}} -log MaxSlots={{MAX_PLAYERS}} -USEALLAVAILABLECORES -Port={{SERVER_PORT}} -QueryPort={{QUERY_PORT}} -Beaconport={{BEACON_PORT}}",
    "config": {
        "files": "{\r\n    \"Mordhau\/Saved\/Config\/WindowsServer\/Game.ini\": {\r\n        \"parser\": \"file\",\r\n        \"find\": {\r\n            \"AdminPassword\": \"AdminPassword={{server.build.env.ADMIN_PASSWORD}}\",\r\n            \"ServerName\": \"ServerName={{server.build.env.SERVER_NAME}}\",\r\n            \"ServerPassword\": \"ServerPassword={{server.build.env.GAME_PASSWORD}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\"done\": \"Session GameSession successfully created\"}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# steamcmd Base Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\n# Image to install with is 'debian:buster-slim'\r\n\r\n##\r\n#\r\n# Variables\r\n# STEAM_USER, STEAM_PASS, STEAM_AUTH - Steam user setup. If a user has 2fa enabled it will most likely fail due to timeout. Leave blank for anon install.\r\n# WINDOWS_INSTALL - if it's a windows server you want to install set to 1\r\n# SRCDS_APPID - steam app id ffound here - https:\/\/developer.valvesoftware.com\/wiki\/Dedicated_Servers_List\r\n# EXTRA_FLAGS - when a server has extra glas for things like beta installs or updates.\r\n#\r\n##\r\nexport DEBIAN_FRONTEND=noninteractive\r\n\r\napt -y update\r\ndpkg --add-architecture i386\r\napt -y --no-install-recommends install curl lib32gcc1 ca-certificates gnupg wget software-properties-common\r\n\r\n## just in case someone removed the defaults.\r\nif [ \"${STEAM_USER}\" == \"\" ]; then\r\n    echo -e \"steam user is not set.\\n\"\r\n    echo -e \"Using anonymous user.\\n\"\r\n    STEAM_USER=anonymous\r\n    STEAM_PASS=\"\"\r\n    STEAM_AUTH=\"\"\r\nelse\r\n    echo -e \"user set to ${STEAM_USER}\"\r\nfi\r\n\r\n## download and install steamcmd\r\ncd \/tmp\r\nmkdir -p \/mnt\/server\/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\ncd \/mnt\/server\/steamcmd\r\n\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/server\r\n\r\n## install game using steamcmd\r\n.\/steamcmd.sh +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '+@sSteamCmdForcePlatformType windows' ) +force_install_dir \/mnt\/server +app_update ${SRCDS_APPID} ${INSTALL_FLAGS} validate +quit ## other flags may be needed depending on install. looking at you cs 1.6\r\n\r\n## set up 32 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk32\r\ncp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n\r\n## set up 64 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk64\r\ncp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so\r\n\r\n## Mordhau specific because reasons\r\ncd \/tmp\r\n\r\n## install latest wine\r\nwget -nc https:\/\/dl.winehq.org\/wine-builds\/winehq.key\r\napt-key add winehq.key\r\necho \"deb https:\/\/dl.winehq.org\/wine-builds\/debian\/ buster main\" >> \/etc\/apt\/sources.list\r\napt update\r\n\r\n## libfaudio needed to install wine\r\nwget -nc https:\/\/download.opensuse.org\/repositories\/Emulators:\/Wine:\/Debian\/Debian_10\/amd64\/libfaudio0_20.01-0~buster_amd64.deb\r\nwget -nc https:\/\/download.opensuse.org\/repositories\/Emulators:\/Wine:\/Debian\/Debian_10\/i386\/libfaudio0_20.01-0~buster_i386.deb\r\n\r\napt install -y .\/libfaudio0_20.01-0~buster_*\r\n\r\n## install wine, cabextract, and xvfb for winetricks\r\napt install -y --install-recommends winehq-stable cabextract xvfb\r\n\r\nexport WINEPREFIX=\/mnt\/server\/.wine\r\nexport WINEDLLOVERRIDES=\"mscoree,mshtml=\"\r\nexport DISPLAY=:0\r\nexport DISPLAY_WIDTH=1024\r\nexport DISPLAY_HEIGHT=768\r\nexport DISPLAY_DEPTH=16\r\nexport AUTO_UPDATE=1\r\nexport XVFB=1\r\n\r\n## install winetricks\r\nwget -q -O \/usr\/sbin\/winetricks https:\/\/raw.githubusercontent.com\/Winetricks\/winetricks\/master\/src\/winetricks \\\r\n&& chmod +x \/usr\/sbin\/winetricks\r\n\r\n## install vc redistributable\r\nxvfb-run --auto-servernum winetricks -q vcrun2019\r\n\r\n## fix issues with startup.\r\nif [[ ! -d \".wine\/drive_c\/users\/container\/My Documents\" ]]; then\r\n    mkdir -p \"\/mnt\/server\/.wine\/drive_c\/users\/container\/My Documents\"\r\nfi",
            "container": "debian:buster-slim",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Steam Server App ID",
            "description": "",
            "env_variable": "SRCDS_APPID",
            "default_value": "629800",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|numeric"
        },
        {
            "name": "Query Port",
            "description": "",
            "env_variable": "QUERY_PORT",
            "default_value": "27015",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|numeric|max:65535"
        },
        {
            "name": "Beacon Port",
            "description": "Mordhau Beacon Port",
            "env_variable": "BEACON_PORT",
            "default_value": "15000",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|numeric|max:65535"
        },
        {
            "name": "Windows Install Flag",
            "description": "Required for windows game server installs",
            "env_variable": "WINDOWS_INSTALL",
            "default_value": "1",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|boolean"
        },
        {
            "name": "Admin Password",
            "description": "",
            "env_variable": "ADMIN_PASSWORD",
            "default_value": "aP@55word",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string"
        },
        {
            "name": "Server Name",
            "description": "",
            "env_variable": "SERVER_NAME",
            "default_value": "A Pterodactyl Hosted Server",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string"
        },
        {
            "name": "Game Password",
            "description": "",
            "env_variable": "GAME_PASSWORD",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string"
        },
        {
            "name": "Default Map",
            "description": "",
            "env_variable": "DEFAULT_MAP",
            "default_value": "\/Game\/Mordhau\/Maps\/Contraband\/FFA_Contraband",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string"
        },
        {
            "name": "Max Players",
            "description": "Max Players for the server",
            "env_variable": "MAX_PLAYERS",
            "default_value": "24",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|numeric"
        },
        {
            "name": "Auto Update",
            "description": "Decide if you want the server to auto update",
            "env_variable": "AUTO_UPDATE",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean"
        },
        {
            "name": "Extra variables for install",
            "description": "",
            "env_variable": "EXTRA_FLAGS",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string"
        }
    ]
}
